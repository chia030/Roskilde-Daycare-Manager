package org.roskildedaycare.admin.View;

import org.roskildedaycare.admin.Model.User;
import org.roskildedaycare.admin.Repository.Data.UsersRepo;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

public class StartPanel {

    // Variables declaration - do not modify
    private javax.swing.JLabel header;
    private javax.swing.JButton loginButton;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JLabel password;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JPanel startPanel;
    private javax.swing.JLabel username;
    private javax.swing.JTextField usernameField;
    private javax.swing.JLabel successLabel;

    private boolean validCredentials = false;
    private boolean userPermission = false;
    private boolean loginSuccessful = false;
    // End of variables declaration

    public StartPanel(MainFrame frame) {
        initComponents(frame);
    }


    public boolean getValidCredentials() {
        return this.validCredentials;
    }

    public void setValidCredentials(boolean validCredentials) {
        this.validCredentials = validCredentials;
    }

    public boolean getUserPermission() {
        return this.userPermission;
    }

    public void setUserPermission(boolean userPermission) {
        this.userPermission = userPermission;
    }

    public boolean getLoginSuccessful() {
        return this.loginSuccessful;
    }

    public void setLoginSuccessful(boolean loginSuccessful) {
        this.loginSuccessful = loginSuccessful;
    }

    public JLabel getHeader() {
        return header;
    }

    public void setHeader(JLabel header) {
        this.header = header;
    }

    public JButton getLoginButton() {
        return loginButton;
    }

    public void setLoginButton(JButton loginButton) {
        this.loginButton = loginButton;
    }

    public JPanel getLoginPanel() {
        return loginPanel;
    }

    public void setLoginPanel(JPanel loginPanel) {
        this.loginPanel = loginPanel;
    }

    public JLabel getPassword() {
        return password;
    }

    public void setPassword(JLabel password) {
        this.password = password;
    }

    public JPanel getStartPanel() {
        return startPanel;
    }

    public void setStartPanel(JPanel startPanel) {
        this.startPanel = startPanel;
    }

    public JLabel getUsername() {
        return username;
    }

    public void setUsername(JLabel username) {
        this.username = username;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents(MainFrame frame) {

        startPanel = new javax.swing.JPanel();
        header = new javax.swing.JLabel();
        loginPanel = new javax.swing.JPanel();
        username = new javax.swing.JLabel();
        password = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        successLabel = new javax.swing.JLabel();


//        startPanel.setBackground(new java.awt.Color(253, 255, 245));
        startPanel.setOpaque(false);

        header.setFont(new java.awt.Font("MS Gothic", 2, 48)); // NOI18N
        header.setForeground(new java.awt.Color(255, 102, 102));
        header.setText("Roskilde Daycare");
        header.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        loginPanel.setBackground(new java.awt.Color(255, 255, 234));
        loginPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 51, 0)));

        username.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        username.setForeground(new java.awt.Color(153, 51, 0));
        username.setText("USERNAME:");

        password.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        password.setForeground(new java.awt.Color(153, 51, 0));
        password.setText("PASSWORD:");

        usernameField.setFont(new java.awt.Font("Consolas", 0, 10)); // NOI18N

        passwordField.setFont(new java.awt.Font("Consolas", 0, 10)); // NOI18N

        loginButton.setBackground(new java.awt.Color(255, 250, 200));
        loginButton.setFont(new java.awt.Font("Consolas", 0, 10)); // NOI18N
        loginButton.setForeground(new java.awt.Color(153, 51, 0));
        loginButton.setText("LOGIN");
        loginButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 51, 0)));
        loginButton.setBorderPainted(false);

        successLabel.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        successLabel.setForeground(new java.awt.Color(153, 51, 0));
        successLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        successLabel.setText("   ");

        loginButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                loginButtonActionPerformed(frame);
            }
        });

        loginButton.addKeyListener(new KeyListener() {

            @Override
            public void keyTyped(KeyEvent e) {
            } //no need

            @Override
            public void keyPressed(KeyEvent evt) {
                if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                    loginButtonActionPerformed(frame);
                }
            }

            @Override
            public void keyReleased(KeyEvent e) {
            } //no need
        });

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
                loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(loginPanelLayout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(loginPanelLayout.createSequentialGroup()
                                                .addComponent(username)
                                                .addGap(18, 18, 18)
                                                .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(loginPanelLayout.createSequentialGroup()
                                                .addComponent(password)
                                                .addGap(18, 18, 18)
                                                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPanelLayout.createSequentialGroup()
                                .addContainerGap(111, Short.MAX_VALUE)
                                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPanelLayout.createSequentialGroup()
                                                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(169, 169, 169))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPanelLayout.createSequentialGroup()
                                                .addComponent(successLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(108, 108, 108))))
        );
        loginPanelLayout.setVerticalGroup(
                loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(loginPanelLayout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(username)
                                        .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(password)
                                        .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(successLabel)
                                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout startPanelLayout = new javax.swing.GroupLayout(startPanel);
        startPanel.setLayout(startPanelLayout);
        startPanelLayout.setHorizontalGroup(
                startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(startPanelLayout.createSequentialGroup()
                                .addGap(189, 189, 189)
                                .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(loginPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap(189, Short.MAX_VALUE))
        );
        startPanelLayout.setVerticalGroup(
                startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(startPanelLayout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addComponent(header)
                                .addGap(64, 64, 64)
                                .addComponent(loginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(113, Short.MAX_VALUE))
        );


        //do I need a default button?
        frame.getRootPane().setDefaultButton(loginButton);

    }// </editor-fold>


    private void loginButtonActionPerformed(MainFrame frame) {

        for (User i : UsersRepo.fetchAllUsers()) {

            if (i.getUser_name().equals(usernameField.getText()) && i.getPassword().equals(passwordField.getText())) {

                successLabel.setText("Login successful!"); //this is not showing :(

                validCredentials = true;
                userPermission = i.isAll_permissions_granted();
                loginSuccessful = true;

                if (validCredentials && userPermission && loginSuccessful) {

                    frame.changePanel("Admin");
////                        dispose();
//                        frame.getContentPane().removeAll();
////                        AdminHomePanel admin = new AdminHomePanel();
                }

            } else successLabel.setText("Try again!");
        }

    }
}
